apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'docker'

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.beust/jcommander
    compile group: 'com.beust', name: 'jcommander', version: '1.69'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    testCompile group: 'junit', name: 'junit', version: '4.12'

}

targetCompatibility = 1.8
sourceCompatibility = 1.8

mainClassName = 'emufog.launcher.Emufog'

group = 'emufog'
applicationName = 'emufog'
version = '1.1'

jar {
    manifest {
        attributes(
                'Implementation-Title': 'EmuFog',
                'Implementation-Version': version,
                'Main-Class': 'emufog.launcher.Emufog'
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'fat'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task buildDocker(type: Docker){
    push=false
    dockerfile = file("Dockerfile")
    doFirst{
        copy {
            from fatJar
            rename {'emufog.jar'}
            into stageDir
        }
    }
}

buildDocker.dependsOn(fatJar)

artifacts {
    archives fatJar
}